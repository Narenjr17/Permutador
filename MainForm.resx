<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAgAwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAIOmsIOmsIOmsIOmsIOmsIOmsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAIOmsIOmsIOmsIOmsIOmsIOmsAAAAAAAAAAAAAAAAAAAAAAAAIOmsIOmsIOmsIOmsIOmsI
        OmsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIOmsIOmsIOmsIOmsIOmsI
        OmsAAAAAAAAAAAAAAAAAAAAAAAAIOmsIOmsh1v8h1v8QnN4QnN4IOmsIOmsIOmsIOmsIOmsIOmsIOmsI
        OmsIOmsIOmsIOmsIOmsIOmsIOmsQnN4QnN4h1v8h1v8IOmsIOmsAAAAAAAAAAAAAAAAAAAAAAAAIOmsI
        Omsh1v8h1v8QnN4QnN4IOmsIOmsIOmsIOmsIOmsIOmsIOmsIOmsIOmsIOmsIOmsIOmsIOmsIOmsQnN4Q
        nN4h1v8h1v8IOmsIOmsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIOmsIOmsIOmsIOmsQnN4QnN4QnN4Q
        nN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4IOmsIOmsIOmsIOmsAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAIOmsIOmsIOmsIOmsQnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4Q
        nN4QnN4QnN4IOmsIOmsIOmsIOmsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIOmsIOmsQnN4QnN4QnN4Q
        nN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4IOmsI
        OmsAAAAAAAAAAAAAAAAAAAAAAAAIOmsIOmsQnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4Q
        nN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4IOmsIOmsAAAAAAAAAAAAAAAAAAAAAAAAIOmsI
        OmsQnN4QnN4QnN4QnN4IOmsIOmsIOmsIOmsQnN4QnN4QnN4QnN4QnN4QnN4IOmsIOmsIOmsIOmsQnN4Q
        nN4QnN4QnN4IOmsIOmsAAAAAAAAAAAAAAAAAAAAAAAAIOmsIOmsQnN4QnN4QnN4QnN4IOmsIOmsIOmsI
        OmsQnN4QnN4QnN4QnN4QnN4QnN4IOmsIOmsIOmsIOmsQnN4QnN4QnN4QnN4IOmsIOmsAAAAAAAAAAAAA
        AAAAAAAAAAAIOmsIOmsQnN4QnN4IOmsIOmsh1v8h1v8IOmsIOmsQnN4QnN4QnN4QnN4QnN4QnN4IOmsI
        Omsh1v8h1v8IOmsIOmsQnN4QnN4IOmsIOmsAAAAAAAAAAAAAAAAAAAAAAAAIOmsIOmsQnN4QnN4IOmsI
        Omsh1v8h1v8IOmsIOmsQnN4QnN4QnN4QnN4QnN4QnN4IOmsIOmsh1v8h1v8IOmsIOmsQnN4QnN4IOmsI
        OmsAAAAAAAAAAAAAAAAAAAAAAAAIOmsIOmsQnN4QnN4h1v8h1v8h1v8h1v8QnN4QnN4QnN4QnN4QnN4Q
        nN4QnN4QnN4QnN4QnN4h1v8h1v8h1v8h1v8QnN4QnN4IOmsIOmsIOmsIOmsAAAAAAAAAAAAAAAAIOmsI
        OmsQnN4QnN4h1v8h1v8h1v8h1v8QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4h1v8h1v8h1v8h
        1v8QnN4QnN4IOmsIOmsIOmsIOmsAAAAAAAAAAAAAAAAAAAAAAAAIOmsIOmsQnN4QnN4h1v8h1v8QnN4Q
        nN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4h1v8h1v8QnN4QnN4IOmsIOmsQnN4QnN4IOmsIOmsAAAAA
        AAAAAAAAAAAAAAAAAAAIOmsIOmsQnN4QnN4h1v8h1v8QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4Q
        nN4h1v8h1v8QnN4QnN4IOmsIOmsQnN4QnN4IOmsIOmsAAAAAAAAAAAAAAAAAAAAAAAAIOmsIOmsQnN4Q
        nN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4IOmsIOmsQnN4Q
        nN4IOmsIOmsIOmsIOmsAAAAAAAAAAAAAAAAIOmsIOmsQnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4Q
        nN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4QnN4IOmsIOmsQnN4QnN4IOmsIOmsIOmsIOmsAAAAAAAAIOmsI
        OmtjUuZjUuZjUuZjUuYh1v8h1v8h1v8h1v8AEQAAEQAQnN4QnN4AEQAAEQAh1v8h1v8h1v8h1v9jUuZj
        UuZjUuZjUuYIOmsIOmsQnN4QnN4IOmsIOmsAAAAAAAAIOmsIOmtjUuZjUuZjUuZjUuYh1v8h1v8h1v8h
        1v8AEQAAEQAQnN4QnN4AEQAAEQAh1v8h1v8h1v8h1v9jUuZjUuZjUuZjUuYIOmsIOmsQnN4QnN4IOmsI
        OmsAAAAAAAAIOmsIOmtjUuZjUuZjUuZjUuYh1v8h1v8h1v8h1v8h1v8h1v8AEQAAEQAh1v8h1v8h1v8h
        1v8h1v8h1v9jUuZjUuZjUuZjUuYIOmsIOmsQnN4QnN4IOmsIOmsAAAAAAAAIOmsIOmtjUuZjUuZjUuZj
        UuYh1v8h1v8h1v8h1v8h1v8h1v8AEQAAEQAh1v8h1v8h1v8h1v8h1v8h1v9jUuZjUuZjUuZjUuYIOmsI
        OmsQnN4QnN4IOmsIOmsAAAAAAAAAAAAAAAAIOmsIOmsh1v8h1v8h1v8h1v8AEQAAEQAh1v8h1v8h1v8h
        1v8h1v8h1v8AEQAAEQAh1v8h1v8h1v8h1v8IOmsIOmsQnN4QnN4QnN4QnN4IOmsIOmsAAAAAAAAAAAAA
        AAAIOmsIOmsh1v8h1v8h1v8h1v8AEQAAEQAh1v8h1v8h1v8h1v8h1v8h1v8AEQAAEQAh1v8h1v8h1v8h
        1v8IOmsIOmsQnN4QnN4QnN4QnN4IOmsIOmsAAAAAAAAAAAAAAAAIOmsIOmsh1v8h1v8h1v8h1v//////
        //8h1v8h1v8h1v8h1v8h1v8h1v////////8h1v8h1v8h1v8h1v8IOmsIOmsIOmsIOmsIOmsIOmsIOmsI
        OmsAAAAAAAAAAAAAAAAIOmsIOmsh1v8h1v8h1v8h1v////////8h1v8h1v8h1v8h1v8h1v8h1v//////
        //8h1v8h1v8h1v8h1v8IOmsIOmsIOmsIOmsIOmsIOmsIOmsIOmsAAAAAAAAAEQAAEQAh1v8h1v8h1v8h
        1v8IOmsIOmsh1v8h1v8h1v8h1v8h1v8h1v8h1v8h1v8h1v8h1v8IOmsIOmsh1v8h1v8h1v8h1v8AEQAA
        EQAAAAAAAAAAAAAAAAAAAAAAAAAAEQAAEQAh1v8h1v8h1v8h1v8IOmsIOmsh1v8h1v8h1v8h1v8h1v8h
        1v8h1v8h1v8h1v8h1v8IOmsIOmsh1v8h1v8h1v8h1v8AEQAAEQAAAAAAAAAAAAAAAAAAEQAAEQAAEQAA
        EQAh1v8h1v8IOmsIOmsAAAAAAAAIOmsIOmsIOmsIOmsIOmsIOmsIOmsIOmsIOmsIOmsAAAAAAAAIOmsI
        Omsh1v8h1v8AEQAAEQAAEQAAEQAAAAAAAAAAEQAAEQAAEQAAEQAh1v8h1v8IOmsIOmsAAAAAAAAIOmsI
        OmsIOmsIOmsIOmsIOmsIOmsIOmsIOmsIOmsAAAAAAAAIOmsIOmsh1v8h1v8AEQAAEQAAEQAAEQAAAAAA
        AAAAEQAAEQAAEQAAEQAAEQAAEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAEQAAEQAAEQAAEQAAEQAAEQAAAAAAAAAAEQAAEQAAEQAAEQAAEQAAEQAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQAAEQAAEQAA
        EQAAEQAAEQAAAAAAAADA//wPwP/8D8AAAA/AAAAP8AAAP/AAAD/AAAAPwAAAD8AAAA/AAAAPwAAAD8AA
        AA/AAAADwAAAA/AAAAPwAAAD8AAAAPAAAADAAAAAwAAAAMAAAADAAAAA8AAAAPAAAADwAAAA8AAAAMAA
        AA/AAAAPAMAMAwDADAMD//8DA///Aw==
</value>
  </data>
</root>